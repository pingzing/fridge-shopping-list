<Page x:Class="FridgeShoppingList.Views.SettingsPage"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
      xmlns:Behaviors="using:Template10.Behaviors"
      xmlns:Core="using:Microsoft.Xaml.Interactions.Core"
      xmlns:Interactivity="using:Microsoft.Xaml.Interactivity"
      xmlns:controls="using:Template10.Controls"
      xmlns:converter="using:Template10.Converters"      
      xmlns:local="using:FridgeShoppingList.Views"      
      xmlns:vm="using:FridgeShoppingList.ViewModels"
      xmlns:ctls="using:FridgeShoppingList.Controls"
      xmlns:uctCtls="using:Microsoft.Toolkit.Uwp.UI.Controls"
      xmlns:models="using:FridgeShoppingList.Models"
      mc:Ignorable="d">

    <Page.Resources>
        <converter:ValueWhenConverter x:Name="FalseWhenTrueConverter">
            <converter:ValueWhenConverter.When>
                <x:Boolean>True</x:Boolean>
            </converter:ValueWhenConverter.When>
            <converter:ValueWhenConverter.Value>
                <x:Boolean>False</x:Boolean>
            </converter:ValueWhenConverter.Value>
            <converter:ValueWhenConverter.Otherwise>
                <x:Boolean>True</x:Boolean>
            </converter:ValueWhenConverter.Otherwise>
        </converter:ValueWhenConverter>
    </Page.Resources>

    <RelativePanel Background="{ThemeResource ApplicationPageBackgroundThemeBrush}"
                   Padding="0 20 0 20">

        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup x:Name="AdaptiveVisualStateGroup">
                <VisualState x:Name="VisualStateNarrow">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="{StaticResource NarrowMinWidth}" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <!--  TODO: change properties for narrow view  -->
                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="VisualStateNormal">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="{StaticResource NormalMinWidth}" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <!--  TODO: change properties for normal view  -->
                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="VisualStateWide">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="{StaticResource WideMinWidth}" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <!--  TODO: change properties for wide view  -->
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>

        <!--  header  -->
        <ctls:LcarsHeader x:Name="pageHeader"                          
                          RelativePanel.AlignTopWithPanel="True"
                          RelativePanel.AlignLeftWithPanel="True"
                          RelativePanel.AlignRightWithPanel="True"
                          IsBackButtonShown="True">
            <StackPanel Background="Black" 
                        Margin="20 -5 20 0" 
                        Padding="20 0 20 0"
                        Orientation="Horizontal">
                <TextBlock Text="SETTINGS" Style="{StaticResource LcarsHeaderTextBlockStyle}"/>
                <Button x:Name="PowerOptionsButton"
                        Background="Black"
                        Foreground="{ThemeResource LcarsAccentBrush}"
                        Margin="10 0 0 0"
                        Height="38" Width="60"
                        VerticalAlignment="Center">
                    <Button.Content>
                        <FontIcon Glyph="{Binding Source={StaticResource FontIcons}, Path=Power}"/>
                    </Button.Content>
                    <Button.Flyout>
                        <MenuFlyout>
                            <MenuFlyoutItem Command="{x:Bind ViewModel.ShutdownCommand}" 
                                            Text="Shutdown" 
                                            Style="{StaticResource ShutdownMenuFlyoutItemStyle}"/>
                            <MenuFlyoutItem Command="{x:Bind ViewModel.RestartCommand}" 
                                            Text="Restart" 
                                            Style="{StaticResource ShutdownMenuFlyoutItemStyle}"/>
                        </MenuFlyout>
                    </Button.Flyout>
                </Button>
            </StackPanel>
        </ctls:LcarsHeader>

        <Grid x:Name="PageMiddle"               
              RelativePanel.AlignLeftWithPanel="True"
              RelativePanel.AlignRightWithPanel="True"
              RelativePanel.Below="pageHeader"
              RelativePanel.Above="Footer">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>

            <Rectangle Grid.Column="0"
                       Fill="{StaticResource LcarsAccentBrush}"
                       Margin="0 2 0 2"
                       StrokeThickness="0"
                       VerticalAlignment="Stretch"
                       Width="70"/>

                <!--  content  -->
            <Pivot x:Name="MyPivot"
                   Grid.Column="1"                             
                   HeaderFocusVisualPlacement="SelectedItemHeader"
                   HorizontalAlignment="Center">

                <!--  settings  -->
                <PivotItem DataContext="{Binding ItemTypesPartViewModel}" Header="Item Types">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>
                        <StackPanel Orientation="Horizontal">
                            <ToggleButton Background="{ThemeResource LcarsBlueGrayBrush}"                                           
                                          Content="SELECT" 
                                          Foreground="White">
                                <Interactivity:Interaction.Behaviors>
                                    <Core:EventTriggerBehavior EventName="Checked">
                                        <Core:InvokeCommandAction Command="{x:Bind ViewModel.ItemTypesPartViewModel.EnterSelectionCommand}"/>
                                    </Core:EventTriggerBehavior>
                                    <Core:EventTriggerBehavior EventName="Unchecked">
                                        <Core:InvokeCommandAction Command="{x:Bind ViewModel.ItemTypesPartViewModel.LeaveSelectionCommand}"/>
                                    </Core:EventTriggerBehavior>
                                </Interactivity:Interaction.Behaviors>
                            </ToggleButton>
                            <Button Background="{ThemeResource LcarsRedBrush}"
                                    Content="DELETE SELECTED"
                                    Foreground="White"
                                    Margin="10 0 0 0"
                                    Style="{ThemeResource LcarsButtonStyle}"
                                    Visibility="{x:Bind ViewModel.ItemTypesPartViewModel.IsSelecting, Mode=OneWay}"/>
                        </StackPanel>
                        <ListView x:Name="ItemTypesList" 
                                  Grid.Row="1" 
                                  SelectionMode="{x:Bind ViewModel.ItemTypesPartViewModel.SelectionMode, Mode=TwoWay}"                                 
                                  ItemsSource="{x:Bind ViewModel.ItemTypesPartViewModel.SavedItemTypes, Mode=OneWay}">
                            <ListView.ItemContainerStyle>
                                <Style TargetType="ListViewItem">
                                    <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                                </Style>
                            </ListView.ItemContainerStyle>
                            <ListView.ItemTemplate>
                                <DataTemplate x:DataType="models:GroceryItemType">
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition/>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition Width="Auto"/>
                                        </Grid.ColumnDefinitions>
                                        <TextBlock Text="{x:Bind Name}" VerticalAlignment="Center"/>
                                        <Button Grid.Column="1" 
                                                Background="{ThemeResource LcarsBlueGrayBrush}" 
                                                Content="EDIT"
                                                Foreground="White"
                                                HorizontalAlignment="Right"
                                                VerticalAlignment="Center"
                                                Style="{ThemeResource LcarsButtonStyle}"
                                                Visibility="{Binding ElementName=ItemTypesList, Path=DataContext.IsSelecting, Converter={StaticResource BoolToVisibilityInvertedConverter}}"/>
                                        <Button Grid.Column="2" 
                                                Background="{ThemeResource LcarsRedBrush}"
                                                Content="DELETE"
                                                Foreground="White"                                                
                                                HorizontalAlignment="Right"
                                                Margin="10 0 0 0"
                                                VerticalAlignment="Center"
                                                Style="{ThemeResource LcarsButtonStyle}"
                                                Visibility="{Binding ElementName=ItemTypesList, Path=DataContext.IsSelecting, Converter={StaticResource BoolToVisibilityInvertedConverter}}"/>
                                    </Grid>
                                </DataTemplate>
                            </ListView.ItemTemplate>
                        </ListView>
                    </Grid>
                </PivotItem>
                
                <PivotItem DataContext="{Binding OneNotePartViewModel}" Header="OneNote">
                    <ScrollViewer HorizontalContentAlignment="Left"
                                  VerticalScrollBarVisibility="Auto">
                        <RelativePanel HorizontalAlignment="Stretch">
                            <uctCtls:HeaderedTextBlock x:Name="StatusHeader" 
                                                           Header="OneNote Connection Status"                                                    
                                                           Text="{x:Bind ViewModel.OneNotePartViewModel.OneNoteStatusText, Mode=OneWay}"
                                                           TextStyle="{StaticResource LcarsHeaderControlTextBlockStyle}">
                                <uctCtls:HeaderedTextBlock.HeaderTemplate>
                                    <DataTemplate>
                                        <TextBlock Text="{Binding}" Style="{StaticResource LcarsSubtitleTextBlockStyle}"/>
                                    </DataTemplate>
                                </uctCtls:HeaderedTextBlock.HeaderTemplate>
                            </uctCtls:HeaderedTextBlock>
                            <Button x:Name="ConnectButton" 
                                    RelativePanel.Below="StatusHeader" 
                                    Background="{StaticResource LcarsLavenderBrush}"
                                    Content="CONNECT"
                                    Click="{x:Bind ViewModel.OneNotePartViewModel.ConnectToOneNote}"                                                                            
                                    Margin="0 10 0 0"
                                    Visibility="{x:Bind ViewModel.OneNotePartViewModel.IsConnected, Mode=OneWay, Converter={StaticResource BoolToVisibilityInvertedConverter}}"
                                    Style="{StaticResource LcarsButtonStyle}"/>
                            <Button x:Name="DisconnectButton" 
                                    RelativePanel.Below="StatusHeader"
                                    Background="{ThemeResource LcarsRedPurpleBrush}"
                                    Content="DISCONNECT"
                                    Click="{x:Bind ViewModel.OneNotePartViewModel.DisconnectFromOneNote}"                                                                            
                                    Margin="0 10 0 0"
                                    Visibility="{x:Bind ViewModel.OneNotePartViewModel.IsConnected, Mode=OneWay}"
                                    Style="{StaticResource LcarsButtonStyle}"/>
                            <TextBlock x:Name="DangerousHeader"
                                       RelativePanel.Above="DeleteAllPagesButton"
                                       Foreground="Red"
                                       Text="DANGEROUS STUFF"
                                       Style="{StaticResource LcarsHeaderControlTextBlockStyle}"
                                       Visibility="{x:Bind ViewModel.OneNotePartViewModel.IsConnected, Mode=OneWay}"/>
                            <Button x:Name="DeleteAllPagesButton" 
                                    RelativePanel.AlignBottomWithPanel="True"
                                    Background="{ThemeResource LcarsRedBrush}"
                                    Content="DELETE ALL ONENOTE SHOPPING LIST PAGES"
                                    Click="{x:Bind ViewModel.OneNotePartViewModel.DeleteShoppingListPages}"                                    
                                    Visibility="{x:Bind ViewModel.OneNotePartViewModel.IsConnected, Mode=OneWay}"
                                    Style="{StaticResource LcarsButtonStyle}"/>
                        </RelativePanel>

                    </ScrollViewer>
                </PivotItem>

                <!--  about  -->
                <PivotItem Header="Status">
                    <RelativePanel DataContext="{Binding StatusPartViewModel}">

                        <TextBlock x:Name="DisplayNameTextBlock"                                                              
                                   RelativePanel.AlignLeftWithPanel="True"                               
                                   RelativePanel.AlignTopWithPanel="True"
                                   Margin="0 0 0 10"
                                   Text="{x:Bind ViewModel.StatusPartViewModel.DisplayName}" 
                                   Style="{ThemeResource LcarsSubtitleTextBlockStyle}"/>

                        <TextBlock x:Name="VersionTextBlock"
                                   RelativePanel.AlignLeftWithPanel="True"
                                   RelativePanel.Below="DisplayNameTextBlock"
                                   Text="Version"
                                   Style="{ThemeResource LcarsSubtitleTextBlockStyle}"/>

                        <TextBlock x:Name="VersionNumberTextBlock"
                                   RelativePanel.AlignLeftWithPanel="True"
                                   RelativePanel.Below="VersionTextBlock"                                   
                                   Text="{x:Bind ViewModel.StatusPartViewModel.Version}"
                                   Style="{StaticResource LcarsCaptionTextBlockStyle}"/>

                        <TextBlock x:Name="AvailableMemoryHeader"
                                   RelativePanel.Below="VersionNumberTextBlock"
                                   RelativePanel.AlignLeftWithPanel="True"
                                   Margin="0 10 0 0"
                                   Text="Available memory"
                                   Style="{ThemeResource LcarsSubtitleTextBlockStyle}"/>
                        <TextBlock x:Name="AvailableMemoryNumber"
                                   RelativePanel.AlignLeftWithPanel="True"
                                   RelativePanel.Below="AvailableMemoryHeader"                                   
                                   Text="{x:Bind ViewModel.StatusPartViewModel.AvailableMemory, Mode=OneWay}"
                                   Style="{StaticResource LcarsCaptionTextBlockStyle}"/>
                        <TextBlock x:Name="NetworkHeader"
                                   RelativePanel.AlignLeftWithPanel="True"
                                   RelativePanel.Below="AvailableMemoryNumber"
                                   Margin="0 10 0 0"
                                   Text="Network"
                                   Style="{ThemeResource LcarsSubtitleTextBlockStyle}"/>
                        <Grid x:Name="WifiInfoPanel" 
                              RelativePanel.Below="NetworkHeader"
                              RelativePanel.AlignLeftWithPanel="True"                                  
                              MinWidth="150">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <Border x:Name="NetworkIcon"                    
                                    Grid.Row="0" Grid.RowSpan="2"
                                    Grid.Column="0"
                                    Background="{ThemeResource SystemControlBackgroundAccentBrush}"
                                    Padding="5"
                                    VerticalAlignment="Center">
                                <FontIcon FontFamily="{ThemeResource SymbolThemeFontFamily}"
                                          FontSize="30"
                                          Glyph="{x:Bind ViewModel.StatusPartViewModel.NetworkIconGlyph, Mode=OneWay}"/>
                            </Border>
                            <TextBlock x:Name="NetworkNameBlock"                                   
                                       Grid.Row="0"
                                       Grid.Column="1"
                                       Margin="5 0 0 0"
                                       Text="{x:Bind ViewModel.StatusPartViewModel.NetworkName, Mode=OneWay}"/>
                            <TextBlock x:Name="IpAddressBlock"                                   
                                       Grid.Row="1"
                                       Grid.Column="1"
                                       Margin="5 0 0 0"
                                       Text="{x:Bind ViewModel.StatusPartViewModel.IpAddress, Mode=OneWay}"
                                       Style="{StaticResource LcarsCaptionTextBlockStyle}"/>
                        </Grid>
                    </RelativePanel>
                </PivotItem>
            </Pivot>
        </Grid>
        <ctls:LcarsFooter x:Name="Footer"
                          RelativePanel.AlignBottomWithPanel="True"
                          RelativePanel.AlignLeftWithPanel="True"
                          RelativePanel.AlignRightWithPanel="True"/>
    </RelativePanel>
</Page>

